# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

env:
  REGISTRY: hub.sixtyfive.me
  NAME: hyundai_driving_experience
  # Secrets on Github:
  # RERGISTRY_PASSWORD
  # REGISTRY_USER
  # SSH_HOST
  # SSH_KEY
  # SSH_PORT
  # SSH_USERNAME

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libxcursor1 libnss3 lsb-release xdg-utils wget
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry config virtualenvs.create false
        poetry config virtualenvs.in-project false
        poetry install
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: short-sha
        uses: benjlevesque/short-sha@v2.2
        id: short-sha
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          #context: .
          #file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.NAME }}:${{ steps.short-sha.outputs.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      -
        name: pulling latest docker image on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            whoami
            sudo docker pull ${{ env.REGISTRY }}/${{ env.NAME }}:latest
  notification:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      -
        name: short-sha
        uses: benjlevesque/short-sha@v2.2
        id: short-sha
      -
        name: notifying
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            curl --data "[$(date +\%F)] Deploying ${{ env.REGISTRY }}/${{ env.NAME }}:${{ steps.short-sha.outputs.sha }} completed!" https://ntfy.sixtyfive.me/workflow


